// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Render Edit Profile renders snapshot correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <mockedDefaultExport
    isVisible={false}
    onBackButtonPress={[Function]}
    onBackdropPress={[Function]}
    onSwipeCancel={[Function]}
    onSwipeMove={[Function]}
    propagateSwipe={true}
    style={
      Object {
        "height": undefined,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#000000",
          "borderRadius": 10,
          "borderWidth": 2,
          "justifyContent": "center",
          "paddingHorizontal": undefined,
          "paddingVertical": 25,
          "width": "80%",
        }
      }
      testID="QRCodeView"
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "color": "#000000",
            "fontFamily": "Inter-Regular",
            "fontSize": 24,
            "fontWeight": "600",
            "textAlign": "center",
            "width": "80%",
          }
        }
      />
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "Inter-Regular",
            "fontSize": 12,
            "fontWeight": "400",
            "textAlign": "center",
          }
        }
      >
        web.cohart.co/
      </Text>
      <View
        style={
          Object {
            "alignSelf": "center",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "height": undefined,
              "justifyContent": "center",
            }
          }
        >
          <mockedDefaultExport
            color="#000000"
            size="large"
          />
        </View>
      </View>
      <Text
        style={
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Inter-Regular",
            "fontSize": 20,
            "fontWeight": "500",
            "textAlign": "center",
          }
        }
      >
        Share
      </Text>
    </View>
  </mockedDefaultExport>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "paddingLeft": undefined,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 60,
          "opacity": 1,
          "paddingTop": 16,
          "width": 40,
        }
      }
      testID="goBackButtonTestID"
    >
      <Image
        source={
          Object {
            "testUri": "../../../app/assets/Icon-back.png",
          }
        }
      />
    </View>
    <Text
      style={
        Object {
          "fontFamily": "Inter-Regular",
          "fontSize": 24,
          "fontWeight": "500",
        }
      }
    >
      Edit Profile
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "height": undefined,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "bottom": 50,
          "left": "32%",
          "opacity": 1,
          "position": "absolute",
          "zIndex": 1000,
        }
      }
      testID="qrButtonId"
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "height": 40,
              "width": 40,
            },
          ]
        }
      >
        <FastImageView
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../app/assets/ic_qr.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="uploadAvatarBtnTestID"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 60,
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1000,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../app/assets/ic_edit.png",
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "borderRadius": 60,
                "height": 120,
                "width": 120,
              },
              Object {},
            ],
          ]
        }
      >
        <FastImageView
          onFastImageLoadEnd={[Function]}
          onFastImageLoadStart={[Function]}
          resizeMode="cover"
          source={
            Object {
              "uri": "dummy_image",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
  </View>
  <mockedDefaultExport
    activeSections={Array []}
    duration={200}
    keyExtractor={[Function]}
    onChange={[Function]}
    renderContent={[Function]}
    renderHeader={[Function]}
    sections={
      Array [
        Object {
          "title": "My Details",
          "type": "Detail",
        },
        Object {
          "title": "About Me",
          "type": "About",
        },
        Object {
          "title": "My Tags",
          "type": "Tag",
        },
        Object {
          "title": "+ More",
          "type": "More",
        },
      ]
    }
    underlayColor="white"
  />
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0000FF",
        "borderRadius": 0,
        "bottom": 0,
        "height": 55,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "white",
          "fontFamily": "Inter-Bold",
          "fontSize": 18,
          "fontWeight": "600",
        }
      }
    >
      Save All
    </Text>
  </View>
</RCTSafeAreaView>
`;

exports[`Test Render Edit Profile should allow to click on the QR code 1`] = `null`;

exports[`Test Render Edit Profile should allow to click on the QR code 2`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <mockedDefaultExport
    isVisible={true}
    onBackButtonPress={[Function]}
    onBackdropPress={[Function]}
    onSwipeCancel={[Function]}
    onSwipeMove={[Function]}
    propagateSwipe={true}
    style={
      Object {
        "height": undefined,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#000000",
          "borderRadius": 10,
          "borderWidth": 2,
          "justifyContent": "center",
          "paddingHorizontal": undefined,
          "paddingVertical": 25,
          "width": "80%",
        }
      }
      testID="QRCodeView"
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "color": "#000000",
            "fontFamily": "Inter-Regular",
            "fontSize": 24,
            "fontWeight": "600",
            "textAlign": "center",
            "width": "80%",
          }
        }
      />
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "Inter-Regular",
            "fontSize": 12,
            "fontWeight": "400",
            "textAlign": "center",
          }
        }
      >
        web.cohart.co/
      </Text>
      <View
        style={
          Object {
            "alignSelf": "center",
          }
        }
      >
        <Image
          source={
            Object {
              "uri": "",
            }
          }
          style={
            Object {
              "height": undefined,
              "width": undefined,
            }
          }
        />
      </View>
      <Text
        style={
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Inter-Regular",
            "fontSize": 20,
            "fontWeight": "500",
            "textAlign": "center",
          }
        }
      >
        Share
      </Text>
    </View>
  </mockedDefaultExport>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "paddingLeft": undefined,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 60,
          "opacity": 1,
          "paddingTop": 16,
          "width": 40,
        }
      }
      testID="goBackButtonTestID"
    >
      <Image
        source={
          Object {
            "testUri": "../../../app/assets/Icon-back.png",
          }
        }
      />
    </View>
    <Text
      style={
        Object {
          "fontFamily": "Inter-Regular",
          "fontSize": 24,
          "fontWeight": "500",
        }
      }
    >
      Edit Profile
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "height": undefined,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "bottom": 50,
          "left": "32%",
          "opacity": 1,
          "position": "absolute",
          "zIndex": 1000,
        }
      }
      testID="qrButtonId"
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "height": 40,
              "width": 40,
            },
          ]
        }
      >
        <FastImageView
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../app/assets/ic_qr.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="uploadAvatarBtnTestID"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 60,
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1000,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../app/assets/ic_edit.png",
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "borderRadius": 60,
                "height": 120,
                "width": 120,
              },
              Object {},
            ],
          ]
        }
      >
        <FastImageView
          onFastImageLoadEnd={[Function]}
          onFastImageLoadStart={[Function]}
          resizeMode="cover"
          source={
            Object {
              "uri": "dummy_image",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
  </View>
  <mockedDefaultExport
    activeSections={Array []}
    duration={200}
    keyExtractor={[Function]}
    onChange={[Function]}
    renderContent={[Function]}
    renderHeader={[Function]}
    sections={
      Array [
        Object {
          "title": "My Details",
          "type": "Detail",
        },
        Object {
          "title": "About Me",
          "type": "About",
        },
        Object {
          "title": "My Tags",
          "type": "Tag",
        },
        Object {
          "title": "+ More",
          "type": "More",
        },
      ]
    }
    underlayColor="white"
  />
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0000FF",
        "borderRadius": 0,
        "bottom": 0,
        "height": 55,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "white",
          "fontFamily": "Inter-Bold",
          "fontSize": 18,
          "fontWeight": "600",
        }
      }
    >
      Save All
    </Text>
  </View>
</RCTSafeAreaView>
`;

exports[`Test Render Edit Profile should allow user to go back 1`] = `null`;

exports[`Test Render Edit Profile should allow user to go back 2`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <mockedDefaultExport
    isVisible={false}
    onBackButtonPress={[Function]}
    onBackdropPress={[Function]}
    onSwipeCancel={[Function]}
    onSwipeMove={[Function]}
    propagateSwipe={true}
    style={
      Object {
        "height": undefined,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#000000",
          "borderRadius": 10,
          "borderWidth": 2,
          "justifyContent": "center",
          "paddingHorizontal": undefined,
          "paddingVertical": 25,
          "width": "80%",
        }
      }
      testID="QRCodeView"
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "color": "#000000",
            "fontFamily": "Inter-Regular",
            "fontSize": 24,
            "fontWeight": "600",
            "textAlign": "center",
            "width": "80%",
          }
        }
      />
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "Inter-Regular",
            "fontSize": 12,
            "fontWeight": "400",
            "textAlign": "center",
          }
        }
      >
        web.cohart.co/
      </Text>
      <View
        style={
          Object {
            "alignSelf": "center",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "height": undefined,
              "justifyContent": "center",
            }
          }
        >
          <mockedDefaultExport
            color="#000000"
            size="large"
          />
        </View>
      </View>
      <Text
        style={
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Inter-Regular",
            "fontSize": 20,
            "fontWeight": "500",
            "textAlign": "center",
          }
        }
      >
        Share
      </Text>
    </View>
  </mockedDefaultExport>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "paddingLeft": undefined,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 60,
          "opacity": 1,
          "paddingTop": 16,
          "width": 40,
        }
      }
      testID="goBackButtonTestID"
    >
      <Image
        source={
          Object {
            "testUri": "../../../app/assets/Icon-back.png",
          }
        }
      />
    </View>
    <Text
      style={
        Object {
          "fontFamily": "Inter-Regular",
          "fontSize": 24,
          "fontWeight": "500",
        }
      }
    >
      Edit Profile
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "height": undefined,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "bottom": 50,
          "left": "32%",
          "opacity": 1,
          "position": "absolute",
          "zIndex": 1000,
        }
      }
      testID="qrButtonId"
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "height": 40,
              "width": 40,
            },
          ]
        }
      >
        <FastImageView
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../app/assets/ic_qr.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="uploadAvatarBtnTestID"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 60,
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1000,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../app/assets/ic_edit.png",
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "borderRadius": 60,
                "height": 120,
                "width": 120,
              },
              Object {},
            ],
          ]
        }
      >
        <FastImageView
          onFastImageLoadEnd={[Function]}
          onFastImageLoadStart={[Function]}
          resizeMode="cover"
          source={
            Object {
              "uri": "dummy_image",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
  </View>
  <mockedDefaultExport
    activeSections={Array []}
    duration={200}
    keyExtractor={[Function]}
    onChange={[Function]}
    renderContent={[Function]}
    renderHeader={[Function]}
    sections={
      Array [
        Object {
          "title": "My Details",
          "type": "Detail",
        },
        Object {
          "title": "About Me",
          "type": "About",
        },
        Object {
          "title": "My Tags",
          "type": "Tag",
        },
        Object {
          "title": "+ More",
          "type": "More",
        },
      ]
    }
    underlayColor="white"
  />
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0000FF",
        "borderRadius": 0,
        "bottom": 0,
        "height": 55,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "white",
          "fontFamily": "Inter-Bold",
          "fontSize": 18,
          "fontWeight": "600",
        }
      }
    >
      Save All
    </Text>
  </View>
</RCTSafeAreaView>
`;

exports[`Test Render Edit Profile should allow user upload the avatar failure 1`] = `null`;

exports[`Test Render Edit Profile should allow user upload the avatar failure 2`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <mockedDefaultExport
    isVisible={false}
    onBackButtonPress={[Function]}
    onBackdropPress={[Function]}
    onSwipeCancel={[Function]}
    onSwipeMove={[Function]}
    propagateSwipe={true}
    style={
      Object {
        "height": undefined,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#000000",
          "borderRadius": 10,
          "borderWidth": 2,
          "justifyContent": "center",
          "paddingHorizontal": undefined,
          "paddingVertical": 25,
          "width": "80%",
        }
      }
      testID="QRCodeView"
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "color": "#000000",
            "fontFamily": "Inter-Regular",
            "fontSize": 24,
            "fontWeight": "600",
            "textAlign": "center",
            "width": "80%",
          }
        }
      />
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "Inter-Regular",
            "fontSize": 12,
            "fontWeight": "400",
            "textAlign": "center",
          }
        }
      >
        web.cohart.co/
      </Text>
      <View
        style={
          Object {
            "alignSelf": "center",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "height": undefined,
              "justifyContent": "center",
            }
          }
        >
          <mockedDefaultExport
            color="#000000"
            size="large"
          />
        </View>
      </View>
      <Text
        style={
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Inter-Regular",
            "fontSize": 20,
            "fontWeight": "500",
            "textAlign": "center",
          }
        }
      >
        Share
      </Text>
    </View>
  </mockedDefaultExport>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "paddingLeft": undefined,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 60,
          "opacity": 1,
          "paddingTop": 16,
          "width": 40,
        }
      }
      testID="goBackButtonTestID"
    >
      <Image
        source={
          Object {
            "testUri": "../../../app/assets/Icon-back.png",
          }
        }
      />
    </View>
    <Text
      style={
        Object {
          "fontFamily": "Inter-Regular",
          "fontSize": 24,
          "fontWeight": "500",
        }
      }
    >
      Edit Profile
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "height": undefined,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "bottom": 50,
          "left": "32%",
          "opacity": 1,
          "position": "absolute",
          "zIndex": 1000,
        }
      }
      testID="qrButtonId"
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "height": 40,
              "width": 40,
            },
          ]
        }
      >
        <FastImageView
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../app/assets/ic_qr.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="uploadAvatarBtnTestID"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 60,
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1000,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../app/assets/ic_edit.png",
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "borderRadius": 60,
                "height": 120,
                "width": 120,
              },
              Object {},
            ],
          ]
        }
      >
        <FastImageView
          onFastImageLoadEnd={[Function]}
          onFastImageLoadStart={[Function]}
          resizeMode="cover"
          source={
            Object {
              "uri": "dummy_image",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
  </View>
  <mockedDefaultExport
    activeSections={Array []}
    duration={200}
    keyExtractor={[Function]}
    onChange={[Function]}
    renderContent={[Function]}
    renderHeader={[Function]}
    sections={
      Array [
        Object {
          "title": "My Details",
          "type": "Detail",
        },
        Object {
          "title": "About Me",
          "type": "About",
        },
        Object {
          "title": "My Tags",
          "type": "Tag",
        },
        Object {
          "title": "+ More",
          "type": "More",
        },
      ]
    }
    underlayColor="white"
  />
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0000FF",
        "borderRadius": 0,
        "bottom": 0,
        "height": 55,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "white",
          "fontFamily": "Inter-Bold",
          "fontSize": 18,
          "fontWeight": "600",
        }
      }
    >
      Save All
    </Text>
  </View>
</RCTSafeAreaView>
`;

exports[`Test Render Edit Profile should allow user upload the avatar success 1`] = `null`;

exports[`Test Render Edit Profile should allow user upload the avatar success 2`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <mockedDefaultExport
    isVisible={false}
    onBackButtonPress={[Function]}
    onBackdropPress={[Function]}
    onSwipeCancel={[Function]}
    onSwipeMove={[Function]}
    propagateSwipe={true}
    style={
      Object {
        "height": undefined,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#000000",
          "borderRadius": 10,
          "borderWidth": 2,
          "justifyContent": "center",
          "paddingHorizontal": undefined,
          "paddingVertical": 25,
          "width": "80%",
        }
      }
      testID="QRCodeView"
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "color": "#000000",
            "fontFamily": "Inter-Regular",
            "fontSize": 24,
            "fontWeight": "600",
            "textAlign": "center",
            "width": "80%",
          }
        }
      />
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "Inter-Regular",
            "fontSize": 12,
            "fontWeight": "400",
            "textAlign": "center",
          }
        }
      >
        web.cohart.co/
      </Text>
      <View
        style={
          Object {
            "alignSelf": "center",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "height": undefined,
              "justifyContent": "center",
            }
          }
        >
          <mockedDefaultExport
            color="#000000"
            size="large"
          />
        </View>
      </View>
      <Text
        style={
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Inter-Regular",
            "fontSize": 20,
            "fontWeight": "500",
            "textAlign": "center",
          }
        }
      >
        Share
      </Text>
    </View>
  </mockedDefaultExport>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "paddingLeft": undefined,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 60,
          "opacity": 1,
          "paddingTop": 16,
          "width": 40,
        }
      }
      testID="goBackButtonTestID"
    >
      <Image
        source={
          Object {
            "testUri": "../../../app/assets/Icon-back.png",
          }
        }
      />
    </View>
    <Text
      style={
        Object {
          "fontFamily": "Inter-Regular",
          "fontSize": 24,
          "fontWeight": "500",
        }
      }
    >
      Edit Profile
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "height": undefined,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "bottom": 50,
          "left": "32%",
          "opacity": 1,
          "position": "absolute",
          "zIndex": 1000,
        }
      }
      testID="qrButtonId"
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "height": 40,
              "width": 40,
            },
          ]
        }
      >
        <FastImageView
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../app/assets/ic_qr.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="uploadAvatarBtnTestID"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 60,
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1000,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../app/assets/ic_edit.png",
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "borderRadius": 60,
                "height": 120,
                "width": 120,
              },
              Object {},
            ],
          ]
        }
      >
        <FastImageView
          onFastImageLoadEnd={[Function]}
          onFastImageLoadStart={[Function]}
          resizeMode="cover"
          source={
            Object {
              "uri": "dummy_image",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
  </View>
  <mockedDefaultExport
    activeSections={Array []}
    duration={200}
    keyExtractor={[Function]}
    onChange={[Function]}
    renderContent={[Function]}
    renderHeader={[Function]}
    sections={
      Array [
        Object {
          "title": "My Details",
          "type": "Detail",
        },
        Object {
          "title": "About Me",
          "type": "About",
        },
        Object {
          "title": "My Tags",
          "type": "Tag",
        },
        Object {
          "title": "+ More",
          "type": "More",
        },
      ]
    }
    underlayColor="white"
  />
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0000FF",
        "borderRadius": 0,
        "bottom": 0,
        "height": 55,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "white",
          "fontFamily": "Inter-Bold",
          "fontSize": 18,
          "fontWeight": "600",
        }
      }
    >
      Save All
    </Text>
  </View>
</RCTSafeAreaView>
`;
