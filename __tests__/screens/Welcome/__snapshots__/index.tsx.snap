// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "flexDirection": "row",
        "height": 80,
        "justifyContent": "space-between",
        "paddingHorizontal": 20,
        "paddingTop": 30,
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "padding": 10,
        }
      }
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000000",
              "fontSize": 20,
            },
            Object {
              "fontFamily": "AktivGroteskExTrial-Bold",
            },
            Object {
              "fontFamily": "AktivGroteskExTrial-Bold",
            },
          ]
        }
      >
        COHART
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "padding": 10,
        }
      }
    />
  </View>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "paddingBottom": 30,
      }
    }
    data={Array []}
    decelerationRate="fast"
    disableIntervalMomentum={true}
    disableScrollViewPanResponder={true}
    disableVirtualization={true}
    getItem={[Function]}
    getItemCount={[Function]}
    getItemLayout={[Function]}
    horizontal={false}
    initialNumToRender={3}
    keyExtractor={[Function]}
    maxToRenderPerBatch={5}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    pagingEnabled={true}
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    scrollsToTop={false}
    showsVerticalScrollIndicator={false}
    snapToAlignment="start"
    snapToOffsets={Array []}
    stickyHeaderIndices={Array []}
    style={
      Array [
        Object {
          "height": NaN,
          "width": 750,
        },
      ]
    }
    updateCellsBatchingPeriod={5}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={10}
  >
    <View />
  </RCTScrollView>
  <View
    style={
      Object {
        "alignItems": "flex-start",
        "backgroundColor": "white",
        "borderTopColor": "#000000",
        "borderTopWidth": 1,
        "flexDirection": "row",
        "height": 66,
        "justifyContent": "space-between",
        "paddingHorizontal": 10,
        "paddingTop": 7,
        "width": undefined,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": undefined,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "flex": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
        testID="DiscoverNav"
      >
        <View
          style={Object {}}
        >
          <Image
            source={
              Object {
                "testUri": "../../../app/assets/discover.png",
              }
            }
            style={
              Object {
                "borderRadius": 12,
                "height": 25,
                "width": 25,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "fontFamily": "Inter-Regular",
              "fontSize": 10,
            }
          }
        >
          Discover
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "flex": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
        testID="CommunityNav"
      >
        <View
          style={Object {}}
        >
          <Image
            source={
              Object {
                "testUri": "../../../app/assets/CommunityTab.png",
              }
            }
            style={
              Object {
                "borderRadius": 12,
                "height": 25,
                "width": 25,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "fontFamily": "Inter-Regular",
              "fontSize": 10,
            }
          }
        >
          Community
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flex": 1,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
      testID="permissionCheck"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#E6FF00",
            "borderRadius": 25,
            "height": 50,
            "justifyContent": "center",
            "position": "absolute",
            "top": -30,
            "width": 50,
            "zIndex": 5,
          }
        }
      >
        <mockedDefaultExport
          color="#000000"
          name="add"
          size={30}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": undefined,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "flex": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
        testID="ProfileNav"
      >
        <View
          style={Object {}}
        >
          <Image
            source={
              Object {
                "testUri": "../../../app/assets/dummyAvator.png",
              }
            }
            style={
              Object {
                "borderRadius": 12,
                "height": 25,
                "width": 25,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "fontFamily": "Inter-Regular",
              "fontSize": 10,
            }
          }
        >
          Profile
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "flex": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
        testID="MenuNav"
      >
        <View
          style={Object {}}
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={25}
            bbWidth={25}
            fill="none"
            focusable={false}
            height={25}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Object {
                  "flex": 0,
                  "height": 25,
                  "width": 25,
                },
              ]
            }
            vbHeight={16}
            vbWidth={24}
            width={25}
            xmlns="http://www.w3.org/2000/svg"
          >
            <RNSVGGroup
              fill={null}
              propList={
                Array [
                  "fill",
                ]
              }
            >
              <RNSVGPath
                d="M3.90625e-05 1.67187C3.90625e-05 1.02467 0.524705 0.5 1.17191 0.5H22.2657C22.9129 0.5 23.4375 1.02467 23.4375 1.67187C23.4375 2.31908 22.9129 2.84375 22.2657 2.84375H1.17191C0.524705 2.84375 3.90625e-05 2.31908 3.90625e-05 1.67187ZM0 7.92276C0 7.27555 0.524666 6.75089 1.17187 6.75089H22.2656C22.9128 6.75089 23.4375 7.27555 23.4375 7.92276C23.4375 8.56997 22.9128 9.09463 22.2656 9.09463H1.17187C0.524666 9.09463 0 8.56997 0 7.92276ZM1.17187 12.9994C0.524666 12.9994 0 13.524 0 14.1712C0 14.8184 0.524666 15.3431 1.17187 15.3431H22.2656C22.9128 15.3431 23.4375 14.8184 23.4375 14.1712C23.4375 13.524 22.9128 12.9994 22.2656 12.9994H1.17187Z"
                fill={4278190080}
                propList={
                  Array [
                    "fill",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <Text
          style={
            Array [
              Object {
                "fontFamily": "Inter-Regular",
                "fontSize": 10,
              },
            ]
          }
        >
          Menu
        </Text>
      </View>
    </View>
  </View>
  <mockedDefaultExport
    isVisible={false}
    onBackButtonPress={[Function]}
    onBackdropPress={[Function]}
    onSwipeCancel={[Function]}
    onSwipeMove={[Function]}
    propagateSwipe={true}
    style={
      Object {
        "height": undefined,
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "height": undefined,
          "justifyContent": "center",
          "paddingHorizontal": 20,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 20,
            "paddingVertical": 25,
            "width": "80%",
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "column",
              "justifyContent": "space-between",
              "paddingHorizontal": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#000000",
                "fontFamily": "Inter-Regular",
                "fontSize": 13,
                "fontWeight": "bold",
                "paddingVertical": 5,
                "textAlign": "center",
              }
            }
          >
            Upload SnapShot
          </Text>
          <Text
            style={
              Object {
                "color": "#000000",
                "fontFamily": "Inter-Regular",
                "fontSize": 13,
                "fontWeight": "bold",
                "paddingVertical": 5,
                "textAlign": "center",
              }
            }
          >
            Upload ArtWork
          </Text>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "Inter-Regular",
                "fontSize": 13,
                "fontWeight": "bold",
                "paddingVertical": 5,
                "textAlign": "center",
              },
              Object {
                "color": "#1310F8",
              },
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </mockedDefaultExport>
</View>
`;
